(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{563:function(s,t,a){"use strict";a.r(t);var n=a(15),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"python模块化的那些事"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#python模块化的那些事"}},[s._v("#")]),s._v(" Python模块化的那些事")]),s._v(" "),a("p",[s._v("随着程序的越来越复杂，对于代码的管理显得至关重要。Python中对于代码的管理是基于模块和包实现的。这一篇就整理一下关于Python模块化的简单用法。")]),s._v(" "),a("h2",{attrs:{id:"python模块化简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#python模块化简介"}},[s._v("#")]),s._v(" Python模块化简介")]),s._v(" "),a("p",[s._v("Python程序是由模块组成的，一个模块就对应了一个Python文件。而模块是由语句组成的，运行Python程序时，按照模块中的语句的顺序执行代码。语句是Python程序的构造单元，主要用于创建对象、给变量赋值、调用函数、控制语句等等。")]),s._v(" "),a("p",[s._v("模块化编程对于Python而言至关重要，模块中可以定义变量函数、类、普通语句等。我们可以将一个复杂的Python程序分解为多个模块，便于后期的重用和调用。模块化编程有下面的几个优势：")]),s._v(" "),a("ol",[a("li",[s._v("便于将一个任务分解为多个模块，实现团队内部的协同开发，完成大规模程序")]),s._v(" "),a("li",[s._v("实现代码的复用，一个模块可以被反复多次调用")]),s._v(" "),a("li",[s._v("可维护性较强")])]),s._v(" "),a("p",[s._v("Python中提供了一个标准库模块，包括提供了操作系统功能、网络通信、文本处理、文件处理、数学运算等等。同时Python的使用者还开开源了大量的第三方模块，使用方法和Python标准库类似。功能覆盖了方方面面。")]),s._v(" "),a("p",[s._v("模块化编程的基本流程")]),s._v(" "),a("ol",[a("li",[s._v("设计API，进行功能的描述")]),s._v(" "),a("li",[s._v("编码实现API中描述的功能")]),s._v(" "),a("li",[s._v("编写测试代码，并消除全局代码")]),s._v(" "),a("li",[s._v("使用私有函数是心啊不被外部客户端调用的函数模块函数")])]),s._v(" "),a("p",[s._v("模块化编程中，最重要的就是要先设计出模块的API，然后开始编写代码，实现API中描述的功能，最后，在其他模块中导入本模块进行调用。我们通过help查看模块的API，一般使用时先导入模块，然后通过help函数查看。")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\n本模块用于计算员工的工资\n"""')]),s._v("\n\ncompany "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sgg"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("yearSalary")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("monthSalary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""根据传入的月薪计算年薪"""')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("pass")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("每个模块都有一个名称，通过特殊变量"),a("code",[s._v("__name__")]),s._v("可以获取模块的名称，在正常情况之下，模块的名称对应着源文件名，但是，如果当一个模块被当作程序的入口时，其名称为"),a("code",[s._v("__main__")]),s._v("。我们可以根据这个特点，将模块源代码文件中的测试代码进行对立处理。")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\n本模块用于计算员工的工资\n"""')]),s._v("\n\ncompany "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sgg"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("yearSalary")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("monthSalary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""根据传入的月薪计算年薪"""')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("pass")]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 测试代码可以这样写")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" __name__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"__main__"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[s._v("我们可以在模块的第一行添加一个文档字符串，用于描述模块的相关功能，然后使用"),a("code",[s._v("__doc__")]),s._v("可以获取文档字符串的内容。")]),s._v(" "),a("h2",{attrs:{id:"导入模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#导入模块"}},[s._v("#")]),s._v(" 导入模块")]),s._v(" "),a("p",[s._v("模块设计的好处之一就是使代码的复用性变高，写好的模块可以被任意的反复的调用。模块的导入就是在本模块中使用其他的模块。")]),s._v(" "),a("h3",{attrs:{id:"import导入模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#import导入模块"}},[s._v("#")]),s._v(" import导入模块")]),s._v(" "),a("p",[s._v("import 可以直接导入一个或多个模块，并可以给导入的模块重命名。在使用import加载模块时分为四个类别：")]),s._v(" "),a("ol",[a("li",[s._v("使用Python编写的代码")]),s._v(" "),a("li",[s._v("已经被编译为共享库或者ddl的c或C++扩展")]),s._v(" "),a("li",[s._v("一个一组模块的包")]),s._v(" "),a("li",[s._v("使用c编写并链接到python中的内置的模块")])]),s._v(" "),a("p",[s._v("我们一般通过import语句实现模块的导入和使用，import语句实际上是使用了内置函数"),a("code",[s._v("__import__()")]),s._v("。当我们通过import导入一个模块时，Python解释器进行执行，并声称一个对象，这个对象就代表了被加载的模块。")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" math\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 140277795567584")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# <class 'module'>")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("pi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 3.141592653589793")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("当我们导入了一个模块的时候，会生成一个module的类的对象，该对象呗math变量引用，可以通过math变量去访问和引用模块中的所有内容。我们通过import导入多个模块时，本质上也是生成了module的多个类对象而已。有时候，我们需要给模块起一个别名，本质上，这个别名仅仅是新创建一个变量替代默认的变量名引用module对象而已。")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("os\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("os"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# <class 'module'>")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# <class 'module'>")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" math "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" m\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("pi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h3",{attrs:{id:"from-import导入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#from-import导入"}},[s._v("#")]),s._v(" from import导入")]),s._v(" "),a("p",[s._v("Python中可以使用from import导入模块中的成员，导入的格式如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("from 模块名 import 成员1，成员2\t\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("如果希望导入一个模块中的所有成员，则可以采用导入星号的方法："),a("code",[s._v("from 模块名 import *")])]),s._v(" "),a("p",[s._v("但是应该尽量的去避免这种写法，因为星号代表的是导入模块中所有非下划线开头的名称，到那时如果你不知道你导入的模块中有哪些名字，就可能覆盖掉你自己的定义的变量，导致可读性变差，排错困难。")]),s._v(" "),a("h3",{attrs:{id:"import-和-from-import的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#import-和-from-import的区别"}},[s._v("#")]),s._v(" import 和 from import的区别")]),s._v(" "),a("p",[s._v("import导入的是模块，而from import导入的是模块中的一个函数或者一个类。")]),s._v(" "),a("p",[s._v("可以简单的理解的话，import导入的是一个文件，而from import导入的是这个文件下的内容。如果使用import导入的话，就需要使用文件名称调用具体的文件里面的内容。")]),s._v(" "),a("h3",{attrs:{id:"import-动态导入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#import-动态导入"}},[s._v("#")]),s._v(" "),a("code",[s._v("__import__()")]),s._v("动态导入")]),s._v(" "),a("p",[s._v("import本质上是调用的内置的函数"),a("code",[s._v("__import__()")]),s._v(",我们可以通过它实现动态导入。"),a("code",[s._v("__import__()")]),s._v("动态传递不通参数值，就能导入不通的模块。一般我们不建议自行使用"),a("code",[s._v("__import__()")]),s._v("进行导入。")]),s._v(" "),a("h3",{attrs:{id:"模块的加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块的加载"}},[s._v("#")]),s._v(" 模块的加载")]),s._v(" "),a("p",[s._v("当一个模块被导入时，模块中的代码就会被执行，如果再次导入这个模块则不会再次执行。一个模块无论导入了多少次，这个模块在整个进程中，有且只有一个实例对象。")]),s._v(" "),a("h3",{attrs:{id:"动态加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动态加载"}},[s._v("#")]),s._v(" 动态加载")]),s._v(" "),a("p",[s._v("有时候我们确实需要重新加载一个模块，则可以使用："),a("code",[s._v("importlib.reload()")]),s._v("方法。")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" calc_salary\n\nimportlib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("reload")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("calc_salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h2",{attrs:{id:"package-包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#package-包"}},[s._v("#")]),s._v(" package 包")]),s._v(" "),a("p",[s._v("当一个项目中存在多个模块的时候，就需要再次进行组织，我们将具有相同功能的类似的模块放到一起，形成了一个包，一个包必须要包含一个"),a("code",[s._v("__init__.py")]),s._v("的文件，包中可以包含模块，也可以包含子包。")]),s._v(" "),a("p",[s._v("在Pycharm中创建包时，Pycharm会自动帮我生成一个带有"),a("code",[s._v("__init__.py")]),s._v("的文件夹。")]),s._v(" "),a("h3",{attrs:{id:"导入包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#导入包"}},[s._v("#")]),s._v(" 导入包")]),s._v(" "),a("p",[s._v("当我们需要导入某个aa包下的moduleAA模块时，需要以下方法：")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("Import aa.moduleAA")]),s._v(" "),a("p",[s._v("在使用时，需要完整的名称来引用："),a("code",[s._v("aa.moduleAA.func()")])])]),s._v(" "),a("li",[a("p",[s._v("from aa import moduleAA")]),s._v(" "),a("p",[s._v("在使用时，可以直接使用模块名："),a("code",[s._v("moduleAA.func()")])])]),s._v(" "),a("li",[a("p",[s._v("from aa.moduleAA import func")]),s._v(" "),a("p",[s._v("在使用时可以直接使用函数名："),a("code",[s._v("func()")])])])]),s._v(" "),a("p",[s._v("导入包的本质是导入了包中的"),a("code",[s._v("__init__.py")]),s._v("文件，也就是说，导入了"),a("code",[s._v("import pack1")]),s._v("就是导入并执行了pack1包下的"),a("code",[s._v("__init__.py")]),s._v("文件。这样，我们就可以在"),a("code",[s._v("__init__()")]),s._v("模块中批量导入我们需要的模块，不需要一一导入。")]),s._v(" "),a("p",[a("code",[s._v("__init__.py")]),s._v("的三个作用：")]),s._v(" "),a("ol",[a("li",[s._v("识别包")]),s._v(" "),a("li",[s._v("实现模糊导入")]),s._v(" "),a("li",[s._v("包初始化，统一导入代码、批量导入")])]),s._v(" "),a("p",[s._v("test包下的"),a("code",[s._v("__init__.py")])]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" turtle\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" math\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"导入了test包"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("在demo包中导入了test包，并使用test包中导入的math")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" test\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("pi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"导入星包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#导入星包"}},[s._v("#")]),s._v(" 导入星包")]),s._v(" "),a("p",[a("code",[s._v("import *")]),s._v("理论上文件系统可以找出所有的子模块，并进行导入。但是这回花费大量的时间。Python提供了一种包索引的方式。")]),s._v(" "),a("p",[s._v("这个索引可以在"),a("code",[s._v("__imit__.py")]),s._v("文件中定义一个"),a("code",[s._v("__all__")]),s._v("变量，并将对应包下的所有的模块作为列表内容存入到"),a("code",[s._v("__all__")]),s._v("中，这样，使用"),a("code",[s._v("from test import *")]),s._v("导入的就是"),a("code",[s._v("__all__")]),s._v("列表中的所有模块了。但是仍然不建议这样导入。")]),s._v(" "),a("h3",{attrs:{id:"包内引用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#包内引用"}},[s._v("#")]),s._v(" 包内引用")]),s._v(" "),a("p",[s._v("如果是子包内的引用，可以按照相应的位置引入子模块：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" calc\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" demo\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"sys-path和模块的搜索路径"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sys-path和模块的搜索路径"}},[s._v("#")]),s._v(" sys.path和模块的搜索路径")]),s._v(" "),a("p",[s._v("当我们导入某个模块文件时，Python的解释器是如何寻找这个文件并加载的呢？一般按照如下的顺序寻找，如果最后找不到就会报错：")]),s._v(" "),a("ol",[a("li",[s._v("内置模块")]),s._v(" "),a("li",[s._v("当前目录")]),s._v(" "),a("li",[s._v("当前程序的主目录")]),s._v(" "),a("li",[s._v("pythonpath目录")]),s._v(" "),a("li",[s._v("标准链接库目录")]),s._v(" "),a("li",[s._v("第三方库目录site-packages")]),s._v(" "),a("li",[s._v(".pth文件的内容")]),s._v(" "),a("li",[s._v("sys.path.append()添加的临时目录")])]),s._v(" "),a("p",[s._v("当任何一个python程序启动的时候，都会按照上面的路径搜索收集，并放到sys模块的path属性中。")]),s._v(" "),a("p",[s._v("我们可以通过代码往sys.path中添加内容：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('import sys\nsys.path.append("/")\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://wiki-1251603812.cos.ap-shanghai.myqcloud.com/images/image-20220327151807895.png",alt:"image-20220327151807895"}})]),s._v(" "),a("p",[s._v("Pythonpath通过添加环境变量设置")]),s._v(" "),a("p",[s._v(".pth文件，可以在site-packages目录下添加如下的内容：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# 一行写一个\n/aaa/aa/a\n/bbb/bb/b\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h2",{attrs:{id:"模块的发布和安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块的发布和安装"}},[s._v("#")]),s._v(" 模块的发布和安装")]),s._v(" "),a("p",[s._v("当我们完成某个模块的开发后，可以将其对外发布，其他开发着可以以第三方扩展库的方式使用我们的模块。模块的发布步骤如下：")]),s._v(" "),a("ol",[a("li",[s._v("为模块创建如下的结构文件夹，一般情况下文件夹的名字和模块名字一致；")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://wiki-1251603812.cos.ap-shanghai.myqcloud.com/images/image-20220327164733870.png",alt:"image-20220327164733870"}})]),s._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[a("p",[s._v("在文件夹中创建一个"),a("code",[s._v("setup.py")]),s._v("文件，文件内容如下：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("setup"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 对外我们模块的名字")]),s._v("\nname"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" version"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1.0'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 版本号 description='这是第一个对外发布的模块，测试哦',")]),s._v("\nauthor"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 作者")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#描述")]),s._v("\nauthor_email"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'aaa@163.com'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" py_modules"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'baizhanMath2.demo1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'baizhanMath2.demo2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 要发布的模块")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("构建一个发布文件，执行"),a("code",[s._v("python setup.py sdist")]),s._v("命令。")])]),s._v(" "),a("li",[a("p",[s._v("执行完成之后，文件目录下生成了一个dist文件夹，里面生成了一个发布包。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://wiki-1251603812.cos.ap-shanghai.myqcloud.com/images/image-20220327164957409.png",alt:"image-20220327164957409"}})])])]),s._v(" "),a("h3",{attrs:{id:"本地安装模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本地安装模块"}},[s._v("#")]),s._v(" 本地安装模块")]),s._v(" "),a("p",[s._v("将发布安装到本地的计算机上，只需要执行如下的命令即可：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("python setup"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("py install\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("安装完成之后，会在python目录下的lib下的site-packages目录下保存。后面直接使用import导入即可。")]),s._v(" "),a("h3",{attrs:{id:"上传到pypi"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#上传到pypi"}},[s._v("#")]),s._v(" 上传到PyPI")]),s._v(" "),a("p",[s._v("可以将自己开发的模块上传到PyPI上，可以让全球的开发者自由使用。")]),s._v(" "),a("p",[s._v("首先需要注册PyPI账号，https://pypi.python.org")]),s._v(" "),a("p",[s._v("然后创建用户信息文件 .pypirc")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 方式一：Linux")]),s._v("\npython setup.py register\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 方式二：windows Linux")]),s._v("\n在家目录下创建.pypirc\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("distutils"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" index-servers"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("pypi\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("pypi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" repository "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" https://upload.pypi.org/legacy/ username "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" 账户名 password "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" 你自己的密码\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("然后进入setup.py所在的目录，使用"),a("code",[s._v("python setup.py sdist upload")]),s._v("即可将模块代码上传并发布。")]),s._v(" "),a("h3",{attrs:{id:"使用他人的模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用他人的模块"}},[s._v("#")]),s._v(" 使用他人的模块")]),s._v(" "),a("p",[s._v("模块发布完成之后，别人要使用，只需要输入："),a("code",[s._v("pip install package-name")]),s._v("即可安装模块。")]),s._v(" "),a("p",[s._v("如果更新了模块，也可以使用"),a("code",[s._v("pip install package-name update")]),s._v("更新。")]),s._v(" "),a("h2",{attrs:{id:"库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#库"}},[s._v("#")]),s._v(" 库")]),s._v(" "),a("p",[s._v("Python中的库是借用其他语言的概念，并没有具体的定义，模块和包侧重于代码的组织。一般情况下，库强调的是功能性，我们通常讲功能模块的集合称为库。")]),s._v(" "),a("h3",{attrs:{id:"python标准库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#python标准库"}},[s._v("#")]),s._v(" Python标准库")]),s._v(" "),a("p",[s._v("Python中有一个强大的标准库。Python 语言的核心只包含数字、字符串、列表、字典、 文件等常见类型和函数，而由 Python 标准库提供了系统管理、网络通信、文本处理、数据 库接口、图形系统、XML 处理等额外的功能。")]),s._v(" "),a("h3",{attrs:{id:"第三方库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第三方库"}},[s._v("#")]),s._v(" 第三方库")]),s._v(" "),a("p",[s._v("Python之所以流行，是因为有很多强大的第三方库，我们可以在https://pypi.org上搜索需要的第三方库。")])])}),[],!1,null,null,null);t.default=e.exports}}]);